/* AJAX MANIFEST */
YUI_config = { lang: 'en-US', groups: { gallery: { base: 'http://yui.yahooapis.com/combo?gallery-2011.05.12-13-26/build/', combine: true, comboBase: 'http://yui.yahooapis.com/combo?', root: 'gallery-2011.05.12-13-26/build/', patterns: {'gallery-': {}}, modules: { "gallery-graphics": { "requires": ["node", "event-custom", "base"], "plugins": { "gallery-graphics-canvas": { "path": "gallery-graphics-canvas/gallery-graphics-canvas-min.js", "condition": { "test": function(Y) { var canvas = document.createElement("canvas"); return (!document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1") && (canvas && canvas.getContext && canvas.getContext("2d"))); }, "trigger": "gallery-graphics" } }, "gallery-graphics-svg": { "path": "gallery-graphics-svg/gallery-graphics-svg-min.js", "condition": { "test": function(Y) { return (document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1")); }, "trigger": "gallery-graphics" } }, "gallery-graphics-vml": { "path": "gallery-graphics-vml/gallery-graphics-vml-min.js", "condition": { "test": function(Y) { var canvas = document.createElement("canvas"); return (!document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1") && (!canvas || !canvas.getContext || !canvas.getContext("2d"))); }, "trigger": "gallery-graphics" } } } } } }, ymaps: { combine: true, base: 'http://l.yimg.com/st/4.0.0.774/modules/', comboBase: 'http://l.yimg.com/zz/combo?', root: 'st/4.0.0.774/modules/', modules: { 'ymaps-core': { path: 'ymaps-core/ymaps-core-min.js', requires: ['event'] }, 'ymaps-config': { path: 'ymaps-config/ymaps-config-min.js', requires: ['ymaps-core', 'intl'], lang: ['en-US', 'en-GB', 'es-ES', 'es-MX', 'es-US', 'fr-FR', 'fr-CA', 'it-IT', 'de-DE', 'zh-TW', 'zh-HK', 'zh-CN'] }, 'ymaps-util': { path: 'ymaps-util/ymaps-util-min.js', requires: ['ymaps-core', 'ymaps-config', 'datasource', 'node'] }, 'ymaps-coordpoint': { path: 'ymaps-coordpoint/ymaps-coordpoint-min.js' }, 'ymaps-geolocation': { path: 'ymaps-geolocation/ymaps-geolocation-min.js', requires: ['base', 'ymaps-util'] }, 'ymaps-traffic': { path: 'ymaps-traffic/ymaps-traffic-min.js', requires: ['base', 'ymaps-util', 'ymaps-geolocation'] }, 'ymaps-route': { path: 'ymaps-route/ymaps-route-min.js', requires: ['widget', 'ymaps-geolocation','ymaps-util'] }, 'ymaps-controls-zoom' : { path: 'ymaps-controls-zoom/ymaps-controls-zoom-min.js', requires: ['ymaps-util', 'slider', 'event-key'], "plugins": { "ymaps-controls-zoom-ie9": { "path": "ymaps-controls-zoom-ie9/ymaps-controls-zoom-ie9-min.js", "condition": { "test": function(Y) { return (Y.UA.ie == 9); }, "trigger": "ymaps-controls-zoom" } } } }, 'ymaps-controls-zoombutton' : { path: 'ymaps-controls-zoombutton/ymaps-controls-zoombutton-min.js', requires: ['ymaps-util', 'plugin','slider'] }, 'ymaps-controls-simplezoom' : { path: 'ymaps-controls-simplezoom/ymaps-controls-simplezoom-min.js', requires: ['ymaps-util', 'widget', 'event-key'] }, 'ymaps-controls-smallsimplezoom' : { path: 'ymaps-controls-smallsimplezoom/ymaps-controls-smallsimplezoom-min.js', requires: ['ymaps-util', 'widget'] }, 'ymaps-controls-touchzoom' : { path: 'ymaps-controls-touchzoom/ymaps-controls-touchzoom-min.js', requires: ['widget'] }, 'ymaps-core-projection': { path: 'ymaps-core-projection/ymaps-core-projection-min.js', requires: ['attribute'] }, 'ymaps-polyline': { path: 'ymaps-polyline/ymaps-polyline-min.js', requires: ['dd', 'gallery-graphics', 'ymaps-util', 'ymaps-coordpoint', 'ymaps-geolocation', 'ymaps-error', 'widget'] }, 'ymaps-route-ui': { path: 'ymaps-route-ui/ymaps-route-ui-min.js', requires: ['base', 'ymaps-geolocation', 'ymaps-util', 'widget', 'node', 'ymaps-coordpoint', 'ymaps-polyline', 'ymaps-error', 'ymaps-route'] }, 'ymaps-overlay': { path: 'ymaps-overlay/ymaps-overlay-min.js', requires: ['dd', 'ymaps-util', 'widget', 'node', 'ymaps-coordpoint', 'ymaps-polyline', 'ymaps-error'] }, 'ymaps-overlays-traffic': { path: 'ymaps-overlays-traffic/ymaps-overlays-traffic-min.js', requires: ['ymaps-core-projection', 'ymaps-geolocation', 'node'] }, 'ymaps-marker': { path: 'ymaps-marker/ymaps-marker-min.js', requires: ["substitute", "widget", "widget-position", "widget-stack", "event-mouseenter", "ymaps-util", "ymaps-geolocation", "ymaps-css", "ymaps-error"] }, 'ymaps-core-tilemanager': { path: 'ymaps-core-tilemanager/ymaps-core-tilemanager-min.js', requires: ['intl', 'ymaps-util', 'ymaps-core-projection', 'ymaps-geolocation', 'ymaps-error', 'ymaps-config'] }, 'ymaps-controls-type': { path: 'ymaps-controls-type/ymaps-controls-type-min.js', requires: ['ymaps-util', 'widget', 'stylesheet', 'intl'] }, 'ymaps-controls-traffic': { path: 'ymaps-controls-traffic/ymaps-controls-traffic-min.js', requires: ['ymaps-util', 'widget'] }, 'ymaps-controls-keyboard': { path: 'ymaps-controls-keyboard/ymaps-controls-keyboard-min.js', requires: ['base', 'event-key', 'overlay', "ymaps-css"] }, 'ymaps-controls-copyright': { path: 'ymaps-controls-copyright/ymaps-controls-copyright-min.js', requires: ['widget', "widget-position", 'jsonp', 'ymaps-error'] }, 'ymaps-controls-branding': { path: 'ymaps-controls-branding/ymaps-controls-branding-min.js', requires: ['widget', "widget-position", 'ymaps-error'] }, 'ymaps-controls-scale': { path: 'ymaps-controls-scale/ymaps-controls-scale-min.js', requires: ['widget'] }, 'ymaps-controls-pan': { path: 'ymaps-controls-pan/ymaps-controls-pan-min.js', requires: ['ymaps-util', 'ymaps-geolocation', 'widget'] }, 'ymaps-tilebody-manager': { path: 'ymaps-tilebody-manager/ymaps-tilebody-manager-min.js', requires: ['ymaps-util', 'ymaps-core-tilemanager', 'base', 'node', 'transition'] }, 'ymaps-css': { path: 'ymaps-css/ymaps-css-min.css', requires: ['cssreset', 'cssfonts'], type: 'css' }, 'ymaps-error': { path: 'ymaps-error/ymaps-error-min.js', requires: ['plugin'] }, 'ymaps-controls-mouse': { path: 'ymaps-controls-mouse/ymaps-controls-mouse-min.js', requires: ['base', 'transition'], "plugins": { "ymaps-controls-mouse-ie8": { "path": "ymaps-controls-mouse-ie8/ymaps-controls-mouse-ie8-min.js", "condition": { "test": function(Y) { return (Y.UA.ie == 6 || Y.UA.ie == 7 || Y.UA.ie == 8); }, "trigger": "ymaps-controls-mouse" } }, "ymaps-controls-mouse-ie9": { "path": "ymaps-controls-mouse-ie9/ymaps-controls-mouse-ie9-min.js", "condition": { "test": function(Y) { return Y.UA.ie == 9; }, "trigger": "ymaps-controls-mouse" } }, "ymaps-controls-mouse-slider": { "path": "ymaps-controls-mouse-slider/ymaps-controls-mouse-slider-min.js", "requires": ["ymaps-controls-mouse", "dd-drag"], "trigger": "ymaps-controls-mouse" }, "ymaps-controls-mouse-dd-smooth-plugin": { "path": "ymaps-controls-mouse-dd-smooth-plugin/ymaps-controls-mouse-dd-smooth-plugin-min.js", "requires": ["dd-plugin"], "trigger": "ymaps-controls-mouse" } } }, 'ymaps': { path: 'ymaps/ymaps-min.js', requires: ['ymaps-core', 'ymaps-config', 'ymaps-util', 'ymaps-geolocation', 'ymaps-traffic', 'ymaps-route', 'ymaps-route-ui', 'ymaps-overlay', 'ymaps-marker', 'ymaps-core-projection', 'ymaps-core-tilemanager', 'ymaps-polyline', 'ymaps-overlays-traffic', 'node', 'base', 'dd-plugin', 'ymaps-controls-scale', 'ymaps-controls-type', 'ymaps-controls-keyboard', 'ymaps-controls-pan', 'ymaps-controls-zoom', 'ymaps-controls-zoombutton', 'ymaps-tilebody-manager', 'ymaps-controls-simplezoom', 'ymaps-controls-smallsimplezoom', 'ymaps-css', 'ymaps-error', 'ymaps-controls-copyright', 'ymaps-controls-mouse', 'event-mouseenter', 'event-synthetic', 'ymaps-controls-traffic', 'ymaps-coordpoint', 'ymaps-controls-branding', 'ymaps-controls-touchzoom', 'event-resize', 'ymaps-controls-mouse-slider', 'ymaps-controls-mouse-dd-smooth-plugin'] } } } } };
/* END OF AJAX MANIFEST */

YUI_config.groups.gallery.root= 'gallery-2012.04.26-15-49/build/';
YUI_config.groups.gallery.base= 'http://yui.yahooapis.com/combo?gallery-2012.04.26-15-49/build/';

window.YUI_config = window.YUI_config || {groups:{}};
YUI_config.groups.<%= config.namespace %> = <%= JSON.stringify({
    lang: config.lang,
    comboBase : config.comboBase,
    root: config.root || ((config.versionify? config.version : config.target) + '/' ),
    combine: config.combine,
    base: path.join(config.base, config.versionify? config.version : config.target) + '/',    // add a trailing slash
    modules:manifest
}, null, '    ') %>;